apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }
}

def dbflow_version = "4.0.0-beta7"

dependencies {

    compile project("${datacontroller_project_prefix}datacontroller")
    compile project("${datacontroller_project_prefix}datacontroller-dbflow")
    compile project("${datacontroller_project_prefix}datacontroller-okhttp")
    compile project("${datacontroller_project_prefix}datacontroller-retrofit")
    compile project("${datacontroller_project_prefix}datacontroller-sharedpreferences")
    kapt project("${datacontroller_project_prefix}datacontroller-processor")

    compile 'com.squareup.retrofit2:retrofit:2.2.0'

    compile 'org.mockito:mockito-core:2.2.9'

    kaptTest "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
    testCompile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    testCompile "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.code.gson:gson:2.7'
    testCompile "org.robolectric:robolectric:3.0"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

task createTestResources << {
    def mockMakerFile = new File("$projectDir/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker")
    if (System.env.MOCK_MAKER != null) {
        logger.info("Using MockMaker ${System.env.MOCK_MAKER}")
        mockMakerFile.parentFile.mkdirs()
        mockMakerFile.createNewFile()
        mockMakerFile.write(System.env.MOCK_MAKER)
    } else {
        logger.info("Using default MockMaker")
    }
}
kapt {
    generateStubs = true
}