apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

def dbflow_version = "4.0.0-beta1"

dependencies {

    compile project(":datacontroller")
    compile project(":datacontroller-dbflow")
    compile project(":datacontroller-okhttp")

    compile 'org.mockito:mockito-core:2.2.9'

    testApt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
    testCompile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    testCompile "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.code.gson:gson:2.6.2'
    testCompile "org.robolectric:robolectric:3.0"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

task createTestResources << {
    def mockMakerFile = new File("$projectDir/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker")
    if (System.env.MOCK_MAKER != null) {
        logger.info("Using MockMaker ${System.env.MOCK_MAKER}")
        mockMakerFile.parentFile.mkdirs()
        mockMakerFile.createNewFile()
        mockMakerFile.write(System.env.MOCK_MAKER)
    } else {
        logger.info("Using default MockMaker")
    }
}
repositories {
    mavenCentral()
}